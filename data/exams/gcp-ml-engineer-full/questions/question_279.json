{
  "id": "question_279",
  "number": 279,
  "topic": "Topic 1",
  "text": "You are creating an ML pipeline for data processing, model training, and model deployment that uses different Google Cloud services. You have developed code for each individual task, and you expect a high frequency of new files. You now need to create an orchestration layer on top of these tasks. You only want this orchestration pipeline to run if new files are present in your dataset in a Cloud Storage bucket. You also want to minimize the compute node costs. What should you do?",
  "choices": [
    {
      "letter": "A",
      "text": "Create a pipeline in Vertex AI Pipelines. Configure the first step to compare the contents of the bucket to the last time the pipeline was run. Use the scheduler API to run the pipeline periodically.",
      "is_most_voted": false,
      "is_correct": false
    },
    {
      "letter": "B",
      "text": "Create a Cloud Function that uses a Cloud Storage trigger and deploys a Cloud Composer directed acyclic graph (DAG).",
      "is_most_voted": false,
      "is_correct": false
    },
    {
      "letter": "C",
      "text": "Create a pipeline in Vertex AI Pipelines. Create a Cloud Function that uses a Cloud Storage trigger and deploys the pipeline.",
      "is_most_voted": false,
      "is_correct": true
    },
    {
      "letter": "D",
      "text": "Deploy a Cloud Composer directed acyclic graph (DAG) with a GCSObjectUpdateSensor class that detects when a new file is added to the Cloud Storage bucket.",
      "is_most_voted": false,
      "is_correct": false
    }
  ],
  "correct_answer": "C",
  "explanation": "",
  "voting_data": {
    "total_votes": 11,
    "vote_distribution": {},
    "most_voted_answer": "C",
    "confidence_score": 0.8
  },
  "metadata": {
    "extraction_timestamp": "2025-05-29T12:25:11.437699",
    "source_url": "data/input/page-6.html",
    "page_number": 1,
    "difficulty_level": ""
  }
}
