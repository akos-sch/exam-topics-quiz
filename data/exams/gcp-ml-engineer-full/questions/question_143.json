{
  "id": "question_143",
  "number": 143,
  "topic": "Topic 1",
  "text": "You have developed an ML model to detect the sentiment of usersâ€™ posts on your company's social media page to identify outages or bugs. You are using Dataflow to provide real-time predictions on data ingested from Pub/Sub. You plan to have multiple training iterations for your model and keep the latest two versions live after every run. You want to split the traffic between the versions in an 80:20 ratio, with the newest model getting the majority of the traffic. You want to keep the pipeline as simple as possible, with minimal management required. What should you do?",
  "choices": [
    {
      "letter": "A",
      "text": "Deploy the models to a Vertex AI endpoint using the traffic-split=0=80, PREVIOUS_MODEL_ID=20 configuration.",
      "is_most_voted": false,
      "is_correct": true
    },
    {
      "letter": "B",
      "text": "Wrap the models inside an App Engine application using the --splits PREVIOUS_VERSION=0.2, NEW_VERSION=0.8 configuration",
      "is_most_voted": false,
      "is_correct": false
    },
    {
      "letter": "C",
      "text": "Wrap the models inside a Cloud Run container using the REVISION1=20, REVISION2=80 revision configuration.",
      "is_most_voted": false,
      "is_correct": false
    },
    {
      "letter": "D",
      "text": "Implement random splitting in Dataflow using beam.Partition() with a partition function calling a Vertex AI endpoint.",
      "is_most_voted": false,
      "is_correct": false
    }
  ],
  "correct_answer": "A",
  "explanation": "",
  "voting_data": {
    "total_votes": 15,
    "vote_distribution": {},
    "most_voted_answer": "A",
    "confidence_score": 1.0
  },
  "metadata": {
    "extraction_timestamp": "2025-05-29T12:14:56.911673",
    "source_url": "data/input/page-3.html",
    "page_number": 1,
    "difficulty_level": ""
  }
}
