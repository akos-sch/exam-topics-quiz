{
  "id": "question_273",
  "number": 273,
  "topic": "Topic 1",
  "text": "You work for a rapidly growing social media company. Your team builds TensorFlow recommender models in an on-premises CPU cluster. The data contains billions of historical user events and 100,000 categorical features. You notice that as the data increases, the model training time increases. You plan to move the models to Google Cloud. You want to use the most scalable approach that also minimizes training time. What should you do?",
  "choices": [
    {
      "letter": "A",
      "text": "Deploy the training jobs by using TPU VMs with TPUv3 Pod slices, and use the TPUEmbeeding API",
      "is_most_voted": true,
      "is_correct": true
    },
    {
      "letter": "B",
      "text": "Deploy the training jobs in an autoscaling Google Kubernetes Engine cluster with CPUs",
      "is_most_voted": false,
      "is_correct": false
    },
    {
      "letter": "C",
      "text": "Deploy a matrix factorization model training job by using BigQuery ML",
      "is_most_voted": false,
      "is_correct": false
    },
    {
      "letter": "D",
      "text": "Deploy the training jobs by using Compute Engine instances with A100 GPUs, and use the tf.nn.embedding_lookup API",
      "is_most_voted": false,
      "is_correct": false
    }
  ],
  "correct_answer": "A",
  "explanation": "",
  "voting_data": {
    "total_votes": 14,
    "vote_distribution": {},
    "most_voted_answer": "A",
    "confidence_score": 1.0
  },
  "metadata": {
    "extraction_timestamp": "2025-05-29T12:24:46.186788",
    "source_url": "data/input/page-6.html",
    "page_number": 1,
    "difficulty_level": ""
  }
}
