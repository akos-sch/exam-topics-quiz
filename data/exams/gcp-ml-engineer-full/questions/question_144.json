{
  "id": "question_144",
  "number": 144,
  "topic": "Topic 1",
  "text": "You are developing an image recognition model using PyTorch based on ResNet50 architecture. Your code is working fine on your local laptop on a small subsample. Your full dataset has 200k labeled images. You want to quickly scale your training workload while minimizing cost. You plan to use 4 V100 GPUs. What should you do?",
  "choices": [
    {
      "letter": "A",
      "text": "Create a Google Kubernetes Engine cluster with a node pool that has 4 V100 GPUs. Prepare and submit a TFJob operator to this node pool.",
      "is_most_voted": false,
      "is_correct": false
    },
    {
      "letter": "B",
      "text": "Create a Vertex AI Workbench user-managed notebooks instance with 4 V100 GPUs, and use it to train your model.",
      "is_most_voted": false,
      "is_correct": false
    },
    {
      "letter": "C",
      "text": "Package your code with Setuptools, and use a pre-built container. Train your model with Vertex AI using a custom tier that contains the required GPUs.",
      "is_most_voted": true,
      "is_correct": true
    },
    {
      "letter": "D",
      "text": "Configure a Compute Engine VM with all the dependencies that launches the training. Train your model with Vertex AI using a custom tier that contains the required GPUs.",
      "is_most_voted": false,
      "is_correct": false
    }
  ],
  "correct_answer": "C",
  "explanation": "",
  "voting_data": {
    "total_votes": 23,
    "vote_distribution": {},
    "most_voted_answer": "C",
    "confidence_score": 0.85
  },
  "metadata": {
    "extraction_timestamp": "2025-05-29T12:15:01.156409",
    "source_url": "data/input/page-3.html",
    "page_number": 1,
    "difficulty_level": ""
  }
}
